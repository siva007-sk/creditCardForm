{"version":3,"sources":["Components/card.js","Components/creditForm.js","utils/cardTypes.js","App.js","reportWebVitals.js","index.js"],"names":["formatCardNumber","number","numberSize","length","i","slice","maskedNumber","convertStars","starEquivalent","setLogo","cardType","logo","window","location","origin","background","Card","props","chip","cardStyle","backgroundImage","data","backgroundPosition","backgroundSize","backgroundRepeat","className","style","display","show","src","alt","focussed","cardNumber","map","numberChunk","cardName","expiryMonth","expiryYear","margin","type","textAlign","value","cvv","disabled","CreditForm","monthList","yearList","handleChange","event","target","name","match","setState","prevState","cardNum","payCardType","regexMap","regEx","j","indexOf","split","d","c","parseInt","f","substr","getCardType","handleFocus","handleBlur","state","this","onChange","onFocus","onBlur","maxLength","marginRight","hidden","month","year","validate","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc9a9e39.chunk.js","sourcesContent":["function Card(props) {\r\n  const chip =\r\n    window.location.origin + \"/creditCardForm/assets/images/chip.png\";\r\n\r\n  const cardStyle = {\r\n    backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(\"${\r\n      setLogo(props.data.cardType).background\r\n    }\")`,\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n  };\r\n  return (\r\n    <div className=\"card card-container\" style={cardStyle}>\r\n      <div\r\n        className=\"card-front\"\r\n        style={{ display: `${props.data.show === \"front\" ? \"block\" : \"none\"}` }}\r\n      >\r\n        <div className=\"row\">\r\n          <img src={chip} alt=\"chip\" className=\"chip\" />\r\n          <img\r\n            src={setLogo(props.data.cardType).logo}\r\n            alt=\"visa\"\r\n            className=\"card-logo\"\r\n          />\r\n        </div>\r\n        <div\r\n          className={`row card-number ${\r\n            props.data.focussed === \"cardNumber\" ? \"active\" : \"\"\r\n          }`}\r\n        >\r\n          {formatCardNumber(props.data.cardNumber).map((numberChunk) => {\r\n            return <p>{numberChunk}</p>;\r\n          })}\r\n        </div>\r\n        <div className=\"name-expiry-container\">\r\n          <label\r\n            className={`card-holder-name ${\r\n              props.data.focussed === \"cardName\" ? \"active\" : \"\"\r\n            }`}\r\n          >\r\n            Card Holder\r\n            <p>{`${\r\n              props.data.cardName ? props.data.cardName : \"FULL NAME\"\r\n            }`}</p>\r\n          </label>\r\n          <label\r\n            className={`expiry ${\r\n              props.data.focussed === \"expiryMonth\" ||\r\n              props.data.focussed === \"expiryYear\"\r\n                ? \"active\"\r\n                : \"\"\r\n            }`}\r\n          >\r\n            Expires\r\n            <p>{`${props.data.expiryMonth}/${props.data.expiryYear.slice(\r\n              2,\r\n              4\r\n            )}`}</p>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"card-back\"\r\n        style={{ display: `${props.data.show === \"back\" ? \"block\" : \"none\"}` }}\r\n      >\r\n        <div className=\"balck-strip\"></div>\r\n        <div style={{ margin: \"1em 0em\" }}>\r\n          <label className=\"cvv-label\">cvv</label>\r\n          <input\r\n            type=\"text\"\r\n            style={{ textAlign: \"right\", background: \"#fff\" }}\r\n            className=\"cvvDisplay\"\r\n            value={convertStars(props.data.cvv)}\r\n            disabled\r\n          />\r\n        </div>\r\n        <img\r\n          src={setLogo(props.data.cardType).logo}\r\n          alt=\"visa\"\r\n          className=\"card-logo-alt\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n/**\r\n * function to format the card number\r\n * @param {*} number\r\n * @returns\r\n */\r\nfunction formatCardNumber(number) {\r\n  const numberSize = number.length;\r\n  if (numberSize < 16) {\r\n    for (let i = numberSize; i < 16; i++) {\r\n      number += \"#\";\r\n    }\r\n    return [\r\n      number.slice(0, 4),\r\n      number.slice(4, 8),\r\n      number.slice(8, 12),\r\n      number.slice(12, 16),\r\n    ];\r\n  } else {\r\n    let maskedNumber = \"\";\r\n    for (let i = 4; i < 12; i++) {\r\n      maskedNumber += \"*\";\r\n    }\r\n    return [\r\n      number.slice(0, 4),\r\n      maskedNumber.slice(0, 4),\r\n      maskedNumber.slice(4, 8),\r\n      number.slice(12, 16),\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * function to mask the cvv number\r\n * @param {*} number\r\n * @returns\r\n */\r\nfunction convertStars(number) {\r\n  let starEquivalent = \"\";\r\n  for (let i = 0; i < number.length; i++) {\r\n    starEquivalent += \"*\";\r\n  }\r\n  return starEquivalent;\r\n}\r\n\r\n/**\r\n * function to dynamically fetch the card logo and background\r\n * @param {*} cardType\r\n * @returns\r\n */\r\nfunction setLogo(cardType) {\r\n  if (cardType === \"AMEX\") {\r\n    return {\r\n      logo: window.location.origin + \"/creditCardForm/assets/images/amex.png\",\r\n      background:\r\n        window.location.origin + \"/creditCardForm/assets/images/2.jpeg\",\r\n    };\r\n  } else if (cardType === \"DINERSCLUB\") {\r\n    return {\r\n      logo:\r\n        window.location.origin + \"/creditCardForm/assets/images/dinersclub.png\",\r\n      background:\r\n        window.location.origin + \"/creditCardForm/assets/images/7.jpeg\",\r\n    };\r\n  } else if (cardType === \"DISCOVER\") {\r\n    return {\r\n      logo:\r\n        window.location.origin + \"/creditCardForm/assets/images/discover.png\",\r\n      background:\r\n        window.location.origin + \"/creditCardForm/assets/images/14.jpeg\",\r\n    };\r\n  } else if (cardType === \"JCB\") {\r\n    return {\r\n      logo: window.location.origin + \"/creditCardForm/assets/images/jcb.png\",\r\n      background:\r\n        window.location.origin + \"/creditCardForm/assets/images/10.jpeg\",\r\n    };\r\n  } else if (cardType === \"MASTERCARD\") {\r\n    return {\r\n      logo:\r\n        window.location.origin + \"/creditCardForm/assets/images/mastercard.png\",\r\n      background:\r\n        window.location.origin + \"/creditCardForm/assets/images/9.jpeg\",\r\n    };\r\n  } else if (cardType === \"TROY\") {\r\n    return {\r\n      logo: window.location.origin + \"/creditCardForm/assets/images/troy.png\",\r\n      background:\r\n        window.location.origin + \"/creditCardForm/assets/images/3.jpeg\",\r\n    };\r\n  } else if (cardType === \"UNIONPAY\") {\r\n    return {\r\n      logo:\r\n        window.location.origin + \"/creditCardForm/assets/images/unionpay.png\",\r\n      background:\r\n        window.location.origin + \"/creditCardForm/assets/images/4.jpeg\",\r\n    };\r\n  }\r\n  return {\r\n    logo: window.location.origin + \"/creditCardForm/assets/images/visa.png\",\r\n    background:\r\n      window.location.origin + \"/creditCardForm/assets/images/16.jpeg\",\r\n  };\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { DEFAULT_CVC_LENGTH, getCardType } from \"../utils/cardTypes\";\r\nimport Card from \"./card\";\r\n\r\nclass CreditForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      cardNumber: \"\",\r\n      cardName: \"\",\r\n      expiryMonth: \"MM\",\r\n      expiryYear: \"YYYY\",\r\n      cvv: \"\",\r\n      cardType: \"\",\r\n      show: \"front\",\r\n      focussed: \"\",\r\n    };\r\n  }\r\n  // month array to show in the select dropdown\r\n  monthList = [\r\n    \"01\",\r\n    \"02\",\r\n    \"03\",\r\n    \"04\",\r\n    \"05\",\r\n    \"06\",\r\n    \"07\",\r\n    \"08\",\r\n    \"09\",\r\n    \"10\",\r\n    \"11\",\r\n    \"12\",\r\n  ];\r\n\r\n  // year list to display in the select dropdown\r\n  yearList = [\r\n    \"2019\",\r\n    \"2020\",\r\n    \"2021\",\r\n    \"2022\",\r\n    \"2023\",\r\n    \"2024\",\r\n    \"2025\",\r\n    \"2026\",\r\n    \"2027\",\r\n    \"2028\",\r\n    \"2029\",\r\n    \"2030\",\r\n  ];\r\n\r\n  // event handler to handle change in values of the form fields\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === \"cardNumber\") {\r\n      if (value.match(/^[0-9]+$/) || value === \"\") {\r\n        this.setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            [name]: value,\r\n            cardType: getCardType(value),\r\n          };\r\n        });\r\n      }\r\n    } else if (name === \"cvv\") {\r\n      if (value.match(/^[0-9]+$/) || value === \"\") {\r\n        this.setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            [name]: value,\r\n          };\r\n        });\r\n      }\r\n    } else {\r\n      this.setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          [name]: value,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  // event handler to handle change in focus of the form fields\r\n  handleFocus = (event) => {\r\n    const { name } = event.target;\r\n    if (name === \"cvv\") {\r\n      this.setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          show: \"back\",\r\n        };\r\n      });\r\n    } else {\r\n      this.setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          focussed: name,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  // event handler to handle blur events on form fields\r\n  handleBlur = (event) => {\r\n    const { name } = event.target;\r\n    if (name === \"cvv\") {\r\n      this.setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          show: \"front\",\r\n        };\r\n      });\r\n    } else {\r\n      this.setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          focussed: \"\",\r\n        };\r\n      });\r\n    }\r\n  };\r\n  validate() {\r\n    if (\r\n      this.state.cardName &&\r\n      this.state.cardNumber &&\r\n      this.state.cardNumber.length === 16 &&\r\n      this.state.cvv &&\r\n      this.state.cvv.length === 3 &&\r\n      this.state.expiryMonth !== \"MM\" &&\r\n      this.state.expiryYear !== \"YYYY\"\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"form-container card\">\r\n          <Card data={this.state} />\r\n          <label>\r\n            Card Number\r\n            <input\r\n              type=\"text\"\r\n              name=\"cardNumber\"\r\n              value={this.state.cardNumber}\r\n              onChange={this.handleChange}\r\n              onFocus={this.handleFocus}\r\n              onBlur={this.handleBlur}\r\n              maxLength=\"16\"\r\n            />\r\n          </label>\r\n          <label>\r\n            Card Holders\r\n            <input\r\n              type=\"text\"\r\n              name=\"cardName\"\r\n              value={this.state.cardName}\r\n              onChange={this.handleChange}\r\n              onFocus={this.handleFocus}\r\n              onBlur={this.handleBlur}\r\n            />\r\n          </label>\r\n          <span>\r\n            <label className=\"expiration-date-conatiner\">\r\n              Experiation Date\r\n              <div>\r\n                <select\r\n                  style={{ marginRight: \"1em\" }}\r\n                  name=\"expiryMonth\"\r\n                  value={this.state.expiryMonth}\r\n                  onChange={this.handleChange}\r\n                  onFocus={this.handleFocus}\r\n                  onBlur={this.handleBlur}\r\n                >\r\n                  <option value=\"MM\" hidden disabled>\r\n                    Month\r\n                  </option>\r\n                  {this.monthList.map((month) => {\r\n                    return (\r\n                      <option value={month} key={month}>\r\n                        {month}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n                <select\r\n                  name=\"expiryYear\"\r\n                  value={this.state.expiryYear}\r\n                  onChange={this.handleChange}\r\n                  onFocus={this.handleFocus}\r\n                  onBlur={this.handleBlur}\r\n                >\r\n                  <option value=\"YYYY\" disabled hidden>\r\n                    Year\r\n                  </option>\r\n                  {this.yearList.map((year) => {\r\n                    return (\r\n                      <option value={year} key={year}>\r\n                        {year}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            </label>\r\n            <label className=\"cvv-container\">\r\n              CVV\r\n              <input\r\n                type=\"text\"\r\n                name=\"cvv\"\r\n                value={this.state.cvv}\r\n                onChange={this.handleChange}\r\n                maxLength={DEFAULT_CVC_LENGTH}\r\n                onFocus={this.handleFocus}\r\n                onBlur={this.handleBlur}\r\n              />\r\n            </label>\r\n          </span>\r\n          <button className=\"btn-active\" disabled={this.validate()}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreditForm;\r\n","export const DEFAULT_CVC_LENGTH = 3;\nexport const DEFAULT_ZIP_LENGTH = 5;\nexport const DEFAULT_CARD_FORMAT = /(\\d{1,4})/g;\nexport const CARD_TYPES = {\n  amex: {\n    name: \"Amex\",\n    color: \"green\",\n  },\n  visa: {\n    name: \"Visa\",\n    color: \"lime\",\n  },\n  diners: {\n    name: \"Diners\",\n    color: \"orange\",\n  },\n  discover: {\n    name: \"Discover\",\n    color: \"purple\",\n  },\n  jcb: {\n    name: \"Jcb\",\n    color: \"red\",\n  },\n  jcb15: {\n    name: \"Jcb\",\n    color: \"red\",\n  },\n  maestro: {\n    name: \"Maestro\",\n    color: \"yellow\",\n  },\n  mastercard: {\n    name: \"Mastercard\",\n    color: \"lightblue\",\n  },\n  unionpay: {\n    name: \"Unipay\",\n    color: \"cyan\",\n  },\n};\n\nexport const getCardType = (cardNum) => {\n  var payCardType = \"\";\n  var regexMap = [\n    { regEx: /^4[0-9]{5}/gi, cardType: \"VISA\" },\n    { regEx: /^5[1-5][0-9]{4}/gi, cardType: \"MASTERCARD\" },\n    { regEx: /^3[47][0-9]{3}/gi, cardType: \"AMEX\" },\n    { regEx: /^(5[06-8]\\d{4}|6\\d{5})/gi, cardType: \"MAESTRO\" },\n  ];\n\n  for (var j = 0; j < regexMap.length; j++) {\n    if (cardNum.match(regexMap[j].regEx)) {\n      payCardType = regexMap[j].cardType;\n      break;\n    }\n  }\n\n  if (\n    cardNum.indexOf(\"50\") === 0 ||\n    cardNum.indexOf(\"60\") === 0 ||\n    cardNum.indexOf(\"65\") === 0\n  ) {\n    var g = \"508500-508999|606985-607984|608001-608500|652150-653149\";\n    var i = g.split(\"|\");\n    for (var d = 0; d < i.length; d++) {\n      var c = parseInt(i[d].split(\"-\")[0], 10);\n      var f = parseInt(i[d].split(\"-\")[1], 10);\n      if (\n        cardNum.substr(0, 6) >= c &&\n        cardNum.substr(0, 6) <= f &&\n        cardNum.length >= 6\n      ) {\n        payCardType = \"RUPAY\";\n        break;\n      }\n    }\n  }\n  return payCardType;\n};\n","import \"./App.css\";\nimport CreditForm from \"./Components/creditForm\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CreditForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}